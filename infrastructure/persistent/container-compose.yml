version: 3
services:

  influxdb:
    image: docker.io/influxdb:1.7.10
    restart: "no"
    volumes:
      - influxdb2-data:/var/lib/influxdb2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_USERNAME: influxdb
      DOCKER_INFLUXDB_INIT_PASSWORD: influxdb
      DOCKER_INFLUXDB_INIT_ORG: spring-cloud-demo
      DOCKER_INFLUXDB_INIT_BUCKET: spring-cloud-demo

  postgresql:
    image: docker.io/postgres:13.2
    restart: "no"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../resources/postgresql-init.d:/docker-entrypoint-initdb.d:ro
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  mongodb:
    image: docker.io/mongo:4.4.4-bionic
    restart: "no"
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
      - 27018:27018
      - 27019:27019
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo

  mongo-express:
    image: docker.io/mongo-express:0.54.0
    depends_on: mongodb
    restart: "no"
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: localhost
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"

  grafana:
    image: docker.io/grafana/grafana:7.4.3
    depends_on: influxdb
    restart: "no"
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - 3000:3000
    command: sh -c 'sleep 1000'

  rabbitmq:
    image: docker.io/rabbitmq:3.8.12-management
    restart: always
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq