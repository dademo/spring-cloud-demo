spring:
  cloud:
    stream:
      bindings:
        dataOutput:
          destination: testQueueDataExchange
          group: testQueueDataExchange-queue
          producer:
            # We ensure the message is persisted even if our consumer is not started
            # => https://stackoverflow.com/questions/39551875/spring-cloud-stream-does-not-create-a-queue
            requiredGroups: testQueueDataExchange-queue
      rabbit:
        bindings:
          dataOutput:
            producer:
              exchangeType: direct
              exchangeAutoDelete: false
              bindingRoutingKey: 'testRoutingKey'
              routingKeyExpression: "'testRoutingKey'"

app:
  producerName: testPollerProducer
  # https://jsonplaceholder.typicode.com/guide/
  serviceUrl: https://jsonplaceholder.typicode.com/posts
